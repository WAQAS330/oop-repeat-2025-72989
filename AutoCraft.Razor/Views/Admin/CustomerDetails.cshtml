@model List<AutoCraft.Razor.Models.CarDTO>

@{
    ViewData["Title"] = "Vehicle Fleet";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

<style>
    .stats-card {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .stats-icon {
        width: 50px;
        height: 50px;
        border-radius: 15px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.2rem;
        background-color: #6c757d;
    }

    .stats-info h3 {
        margin: 0;
        font-size: 1.8rem;
        font-weight: 700;
    }

    .stats-info p {
        margin: 0;
        color: #6c757d;
        font-size: 0.9rem;
    }

    .add-vehicle-btn {
        border-radius: 15px;
        padding: 1rem 2rem;
        color: white;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        background-color: #28a745;
    }

    .cars-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 2rem;
        margin-top: 2rem;
    }

    .car-card {
        background: white;
        border-radius: 20px;
        padding: 2rem;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        border: 1px solid rgba(0,0,0,0.05);
        position: relative;
        overflow: hidden;
    }

    .car-header {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .car-icon {
        width: 60px;
        height: 60px;
        border-radius: 18px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.5rem;
        background-color: #6c757d;
    }

    .car-info h4 {
        margin: 0;
        font-size: 1.3rem;
        font-weight: 700;
    }

    .car-info p {
        margin: 0;
        color: #6c757d;
        font-size: 0.9rem;
    }

    .car-actions {
        display: flex;
        gap: 0.8rem;
        flex-wrap: wrap;
    }

    .action-btn {
        flex: 1;
        min-width: 100px;
        padding: 0.8rem 1rem;
        border: none;
        border-radius: 12px;
        font-weight: 600;
        font-size: 0.85rem;
        text-transform: uppercase;
        letter-spacing: 0.3px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        color: white;
    }

    .btn-service {
        background-color: #28a745;
    }

    .btn-view {
        background-color: #007bff;
    }

    .btn-delete {
        background-color: #dc3545;
    }

    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        background: white;
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    }

    .empty-icon {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 2rem;
        color: #6c757d;
        font-size: 3rem;
        background-color: #f8f9fa;
    }

    .action-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        padding: 1.5rem;
        border-radius: 20px;
        border: 1px solid #dee2e6;
        background-color: #f8f9fa;
    }

    .service-form-container {
        display: none;
        background: white;
        border-radius: 20px;
        padding: 2rem;
        margin: 2rem 0;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        border: 1px solid rgba(0,0,0,0.05);
    }

    .service-form-container.show {
        display: block;
    }

    .service-form-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
    }

    .service-form-title {
        font-size: 1.3rem;
        font-weight: 700;
        color: #333;
    }

    .close-form-btn {
        background: none;
        border: none;
        font-size: 1.5rem;
        color: #6c757d;
        cursor: pointer;
    }

    .close-form-btn:hover {
        color: #dc3545;
    }

    /* Responsive design */
    .action-bar {
        flex-wrap: wrap;
        gap: 1rem;
    }

    .car-card {
        height: 100%;
    }
</style>

<div class="container-fluid">
    <div class="main-container">
        <div class="page-header">
            <h1 class="page-title">@ViewBag.Name's Fleet</h1>
            <p class="page-subtitle">Manage your vehicles and service records</p>
        </div>

        <div class="action-bar">
            <div class="stats-card">
                <div class="stats-icon">
                    <i class="fas fa-car"></i>
                </div>
                <div class="stats-info">
                    <h3>@Model.Count()</h3>
                    <p>Total Vehicles</p>
                </div>
            </div>

            <button class="add-vehicle-btn" data-bs-toggle="modal" data-bs-target="#addCarModal">
                <i class="fas fa-plus"></i> Add New Vehicle
            </button>
        </div>

        @if (TempData["CarExists"] != null)
        {
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i>
                @TempData["CarExists"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (Model.Any())
        {
            <div class="row g-4 mt-2">
                @foreach (var car in Model)
                {
                    <div class="col-12 col-md-6 col-xl-4">
                        <div class="car-card">
                            <div class="car-header">
                                <div class="car-icon">
                                    <i class="fas fa-car"></i>
                                </div>
                                <div class="car-info">
                                    <h4>@car.LicensePlateNumber</h4>
                                    <p>Vehicle Registration</p>
                                </div>
                            </div>

                            <div class="car-actions">
                                <button type="button" class="action-btn btn-service show-service-form-btn"
                                        data-car-id="@car.VehicleId" data-car-reg="@car.LicensePlateNumber">
                                    <i class="fas fa-wrench"></i> Service
                                </button>
                                <button type="button" class="action-btn btn-view" data-bs-toggle="modal" data-bs-target="#viewServicesModal"
                                        data-car-id="@car.VehicleId" data-car-reg="@car.LicensePlateNumber">
                                    <i class="fas fa-history"></i> History
                                </button>
                                <button type="button" class="action-btn btn-delete delete-car-btn"
                                        data-car-id="@car.VehicleId">
                                    <i class="fas fa-trash"></i> Remove
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="fas fa-car"></i>
                </div>
                <h3>No Vehicles Found</h3>
                <p class="text-muted">Start by adding your first vehicle to the fleet</p>
                <button class="btn add-vehicle-btn mt-3" data-bs-toggle="modal" data-bs-target="#addCarModal">
                    <i class="fas fa-plus"></i> Add Your First Vehicle
                </button>
            </div>
        }
    </div>
</div>

<!-- Inline Service Form -->
<div class="service-form-container" id="serviceFormContainer">
    <div class="service-form-header">
        <h5 class="service-form-title">
            <i class="fas fa-wrench me-2"></i>Schedule Service for <span id="serviceCarReg"></span>
        </h5>
        <button type="button" class="close-form-btn" onclick="hideServiceForm()">
            <i class="fas fa-times"></i>
        </button>
    </div>
    <form id="serviceForm" asp-controller="Service" asp-action="AddServiceToCar" method="post">
        <input type="hidden" name="VehicleId" id="serviceCarId" />
        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label class="form-label"><i class="fas fa-user-cog me-1"></i>Select Mechanic</label>
                    <select name="MechanicId" class="form-select" required>
                        <option value="">-- Choose Mechanic --</option>
                        @foreach (var mechanic in ViewBag.Mechanics)
                        {
                            <option value="@mechanic.MechanicId">@mechanic.FullName</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-3">
                    <label class="form-label"><i class="fas fa-calendar me-1"></i>Service Date</label>
                    <input type="date" name="ServiceDate" class="form-control" required />
                </div>
            </div>
        </div>
        <div class="text-end">
            <button type="submit" class="btn btn-service">
                <i class="fas fa-save me-1"></i>Schedule Service
            </button>
        </div>
    </form>
</div>

<!-- Add Car Modal -->
<div class="modal fade" id="addCarModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="addCarForm" asp-controller="Car" asp-action="AddNewCar" method="post">
                <input type="hidden" name="VehicleOwnerId" value="@ViewBag.CustomerIdentifier" />
                <div class="modal-header">
                    <h5 class="modal-title"><i class="fas fa-plus me-2"></i>Add New Vehicle</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="addCarAlert" class="alert d-none"></div>
                    <div class="mb-3">
                        <label class="form-label"><i class="fas fa-id-card me-1"></i>License Plate Number</label>
                        <input name="LicensePlateNumber" class="form-control" placeholder="e.g., ABC-123" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-service" id="submitCarBtn">
                        <i class="fas fa-save me-1"></i>Save Vehicle
                    </button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- View Services Modal -->
<div class="modal fade" id="viewServicesModal" tabindex="-1" aria-hidden="true" data-bs-backdrop="false" data-bs-keyboard="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fas fa-history me-2"></i>Service History: <span id="carRegTitle"></span></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th><i class="fas fa-calendar me-1"></i>Date</th>
                                <th><i class="fas fa-user me-1"></i>Mechanic</th>
                                <th><i class="fas fa-clipboard me-1"></i>Description</th>
                                <th><i class="fas fa-clock me-1"></i>Hours</th>
                                <th><i class="fas fa-cog me-1"></i>Action</th>
                            </tr>
                        </thead>
                        <tbody id="servicesList">
                            <!-- Will be populated dynamically -->
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<form id="antiForgeryForm" method="post">
    @Html.AntiForgeryToken()
</form>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    // Service Form Functions
    function showServiceForm(carId, carReg) {
        document.getElementById('serviceCarId').value = carId;
        document.getElementById('serviceCarReg').textContent = carReg;
        document.getElementById('serviceFormContainer').classList.add('show');
        
        // Scroll to the form
        document.getElementById('serviceFormContainer').scrollIntoView({ 
            behavior: 'smooth', 
            block: 'center' 
        });
    }

    function hideServiceForm() {
        document.getElementById('serviceFormContainer').classList.remove('show');
        document.getElementById('serviceForm').reset();
    }

    // Show service form when service button is clicked
    document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('.show-service-form-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const carId = this.getAttribute('data-car-id');
                const carReg = this.getAttribute('data-car-reg');
                showServiceForm(carId, carReg);
            });
        });

        // Handle form submission
        document.getElementById('serviceForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            
            fetch('/Service/AddServiceToCar', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (response.ok) {
                    hideServiceForm();
                    // Reload the page to show the new service
                    window.location.reload();
                } else {
                    alert('Failed to schedule service. Please try again.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while scheduling the service.');
            });
        });
    });

    // Ensure modals work properly
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize all modals
        const modals = document.querySelectorAll('.modal');
        modals.forEach(modal => {
            modal.addEventListener('hidden.bs.modal', function() {
                // Ensure body scrolling is restored when modal closes
                document.body.style.overflow = '';
                document.body.classList.remove('modal-open');

                // Remove any lingering backdrops
                const backdrops = document.querySelectorAll('.modal-backdrop');
                backdrops.forEach(backdrop => backdrop.remove());
            });
        });
    });

    // View Services Modal Script
    document.getElementById('viewServicesModal').addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var carId = button.getAttribute('data-car-id');
        var carReg = button.getAttribute('data-car-reg');

        if (!carId || carId === 'null' || carId === 'undefined' || carId.trim() === '') {
            const tbody = document.getElementById('servicesList');
            tbody.innerHTML = "<tr><td colspan='5' class='text-center text-danger'><i class='fas fa-exclamation-triangle me-2'></i>Error: No car ID found</td></tr>";
            return;
        }

        document.getElementById('carRegTitle').textContent = carReg || 'Unknown Car';
        const tbody = document.getElementById('servicesList');
        tbody.innerHTML = "<tr><td colspan='5' class='text-center'><i class='fas fa-spinner fa-spin me-2'></i>Loading services...</td></tr>";

        // Fix the parameter name from carId to vehicleId
        const url = `/Service/GetServicesForCar?vehicleId=${encodeURIComponent(carId)}`;

        fetch(url, {
            method: 'GET',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(services => {
            if (Array.isArray(services)) {
                if (services.length === 0) {
                    tbody.innerHTML = "<tr><td colspan='5' class='text-center text-muted'><i class='fas fa-info-circle me-2'></i>No services found for this vehicle</td></tr>";
                    return;
                }

                tbody.innerHTML = "";
                services.forEach((service) => {
                    const row = `
                        <tr data-service-id="${service.serviceId || 'unknown'}">
                            <td><i class="fas fa-calendar me-2 text-primary"></i>${service.serviceDate ? new Date(service.serviceDate).toLocaleDateString() : 'N/A'}</td>
                            <td><i class="fas fa-user me-2 text-success"></i>${service.mechanicName || 'N/A'}</td>
                            <td>${service.workDescription || 'N/A'}</td>
                            <td><i class="fas fa-clock me-2 text-warning"></i>${service.hours || 'N/A'}h</td>
                            <td>
                                <button type="button" class="btn btn-sm btn-outline-danger"
                                        data-service-id="${service.serviceId || ''}"
                                        onclick="deleteService(this.getAttribute('data-service-id'))">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </td>
                        </tr>`;
                    tbody.innerHTML += row;
                });
            } else {
                tbody.innerHTML = "<tr><td colspan='5' class='text-center text-danger'><i class='fas fa-exclamation-triangle me-2'></i>Unexpected response format</td></tr>";
            }
        })
        .catch(error => {
            tbody.innerHTML = `<tr><td colspan='5' class='text-center text-danger'><i class='fas fa-exclamation-triangle me-2'></i>Error: ${error.message}</td></tr>`;
        });
    });

    // Delete Service Function
    function deleteService(id) {
        if (confirm('Are you sure you want to delete this service record?')) {
            fetch(`/Service/Delete/${id}`, {
                method: 'POST',
            })
            .then(response => {
                if (response.ok) {
                    window.location.reload();
                } else {
                    alert('Failed to delete service');
                }
            })
            .catch(error => console.error('Error:', error));
        }
    }

    // Delete Car Script
    document.addEventListener('DOMContentLoaded', function () {
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

        document.querySelectorAll('.delete-car-btn').forEach(btn => {
            btn.addEventListener('click', function () {
                const carId = this.getAttribute('data-car-id');

                if (confirm("Are you sure you want to remove this vehicle from your fleet?")) {
                    fetch(`/Car/DeleteCar/${carId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': token
                        },
                        body: JSON.stringify({})
                    })
                    .then(res => {
                        if (res.ok) {
                            location.reload();
                        } else {
                            alert("Failed to remove the vehicle.");
                        }
                    })
                    .catch(err => {
                        console.error("Error:", err);
                        alert("An error occurred.");
                    });
                }
            });
        });
    });
</script>